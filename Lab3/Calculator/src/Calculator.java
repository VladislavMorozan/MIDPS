import java.math.*;


public class Calculator extends javax.swing.JFrame {

    private boolean zerodisp;
    private boolean decdisp;
    
    private byte op;
    
    
    private double ina;
    private double inb;
    private double out;
    
    
    
    public Calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Rezultat = new javax.swing.JTextField();
        Opt = new javax.swing.JButton();
        Sapte = new javax.swing.JButton();
        Noua = new javax.swing.JButton();
        Scadere = new javax.swing.JButton();
        Adunare = new javax.swing.JButton();
        Cinci = new javax.swing.JButton();
        Sase = new javax.swing.JButton();
        Inmultire = new javax.swing.JButton();
        Patru = new javax.swing.JButton();
        Impartirea = new javax.swing.JButton();
        Doi = new javax.swing.JButton();
        Unu = new javax.swing.JButton();
        Trei = new javax.swing.JButton();
        Puterea = new javax.swing.JButton();
        Fractie = new javax.swing.JButton();
        Zero = new javax.swing.JButton();
        Punct = new javax.swing.JButton();
        Minus = new javax.swing.JButton();
        Radical = new javax.swing.JButton();
        Stergere = new javax.swing.JButton();
        Egal = new javax.swing.JButton();
        Reset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Rezultat.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Rezultat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RezultatActionPerformed(evt);
            }
        });

        Opt.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Opt.setText("8");
        Opt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OptActionPerformed(evt);
            }
        });

        Sapte.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Sapte.setText("7");
        Sapte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SapteActionPerformed(evt);
            }
        });

        Noua.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Noua.setText("9");
        Noua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NouaActionPerformed(evt);
            }
        });

        Scadere.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Scadere.setText("-");
        Scadere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScadereActionPerformed(evt);
            }
        });

        Adunare.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Adunare.setText("+");
        Adunare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdunareActionPerformed(evt);
            }
        });

        Cinci.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Cinci.setText("5");
        Cinci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CinciActionPerformed(evt);
            }
        });

        Sase.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Sase.setText("6");
        Sase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaseActionPerformed(evt);
            }
        });

        Inmultire.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Inmultire.setText("*");
        Inmultire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InmultireActionPerformed(evt);
            }
        });

        Patru.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Patru.setText("4");
        Patru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatruActionPerformed(evt);
            }
        });

        Impartirea.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Impartirea.setText("/");
        Impartirea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImpartireaActionPerformed(evt);
            }
        });

        Doi.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Doi.setText("2");
        Doi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoiActionPerformed(evt);
            }
        });

        Unu.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Unu.setText("1");
        Unu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnuActionPerformed(evt);
            }
        });

        Trei.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Trei.setText("3");
        Trei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TreiActionPerformed(evt);
            }
        });

        Puterea.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Puterea.setText("x^2");
        Puterea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PutereaActionPerformed(evt);
            }
        });

        Fractie.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Fractie.setText("1/x");
        Fractie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FractieActionPerformed(evt);
            }
        });

        Zero.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Zero.setText("0");
        Zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZeroActionPerformed(evt);
            }
        });

        Punct.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Punct.setText(".");
        Punct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PunctActionPerformed(evt);
            }
        });

        Minus.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Minus.setText("+/-");
        Minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinusActionPerformed(evt);
            }
        });

        Radical.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Radical.setText("sqrt");
        Radical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadicalActionPerformed(evt);
            }
        });

        Stergere.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Stergere.setText("C");
        Stergere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StergereActionPerformed(evt);
            }
        });

        Egal.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Egal.setText("=");
        Egal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EgalActionPerformed(evt);
            }
        });

        Reset.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Reset.setText("CE");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Rezultat)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Sapte, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Opt, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Patru, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                                    .addComponent(Unu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Cinci, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Doi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Trei, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Sase, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Inmultire, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Fractie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Noua, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Scadere, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Adunare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Puterea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Impartirea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Zero, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Punct, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Minus, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Radical, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Stergere, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Egal, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(Rezultat, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Sapte, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Opt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Noua, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Scadere, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Adunare, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Cinci, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sase, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Inmultire, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Patru, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Impartirea, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Doi, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Unu, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Trei, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Puterea, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Fractie, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Zero, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Punct, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Minus, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Radical, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Stergere, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Reset, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                    .addComponent(Egal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RezultatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RezultatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RezultatActionPerformed

    private void SapteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SapteActionPerformed
        if(!zerodisp && !decdisp)
            Rezultat.setText(null);
        Rezultat.setText(Rezultat.getText() + "7");
        zerodisp = true;
    }//GEN-LAST:event_SapteActionPerformed

    private void TreiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TreiActionPerformed
        if(!zerodisp && !decdisp)
            Rezultat.setText(null);
        Rezultat.setText(Rezultat.getText() + "3");
        zerodisp = true;
    }//GEN-LAST:event_TreiActionPerformed

    private void OptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OptActionPerformed
        if(!zerodisp && !decdisp)
            Rezultat.setText(null);
        Rezultat.setText(Rezultat.getText() + "8");
        zerodisp = true;
    }//GEN-LAST:event_OptActionPerformed

    private void ZeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZeroActionPerformed
        if(!zerodisp && !decdisp)
            Rezultat.setText(null);
        Rezultat.setText(Rezultat.getText() + "0");          
    }//GEN-LAST:event_ZeroActionPerformed

    private void NouaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NouaActionPerformed
        if(!zerodisp && !decdisp){
            Rezultat.setText(null);
        }
        Rezultat.setText(Rezultat.getText() + "9");
        zerodisp = true;
    }//GEN-LAST:event_NouaActionPerformed

    private void PatruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatruActionPerformed
         if(!zerodisp && !decdisp)
            Rezultat.setText(null);
        Rezultat.setText(Rezultat.getText() + "4");
        zerodisp = true;
    }//GEN-LAST:event_PatruActionPerformed

    private void CinciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CinciActionPerformed
         if(!zerodisp && !decdisp)
            Rezultat.setText(null);
        Rezultat.setText(Rezultat.getText() + "5");
        zerodisp = true;
    }//GEN-LAST:event_CinciActionPerformed

    private void SaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaseActionPerformed
         if(!zerodisp && !decdisp)
            Rezultat.setText(null);
        Rezultat.setText(Rezultat.getText() + "6");
        zerodisp = true;
    }//GEN-LAST:event_SaseActionPerformed

    private void UnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnuActionPerformed
         if(!zerodisp && !decdisp)
            Rezultat.setText(null);
        Rezultat.setText(Rezultat.getText() + "1");
        zerodisp = true;
    }//GEN-LAST:event_UnuActionPerformed

    private void DoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoiActionPerformed
         if(!zerodisp && !decdisp)
            Rezultat.setText(null);
        Rezultat.setText(Rezultat.getText() + "2");
        zerodisp = true;
    }//GEN-LAST:event_DoiActionPerformed

    private void PunctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PunctActionPerformed
        if(!decdisp){
            Rezultat.setText(Rezultat.getText() + ".");
            decdisp = true;
        }
    }//GEN-LAST:event_PunctActionPerformed

    private void MinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinusActionPerformed
        inb = Double.parseDouble(String.valueOf(Rezultat.getText()));
        out = inb * -1;
        
        if(out > -100000000 && out < 100000000){
            Rezultat.setText(String.valueOf(out));
        }
        else
        {
            Rezultat.setText("Error");
        }
        
        decdisp = true;
        out = 0;
    }//GEN-LAST:event_MinusActionPerformed

    private void StergereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StergereActionPerformed
        Rezultat.setText("0");
        zerodisp = false;
        decdisp = false;
    }//GEN-LAST:event_StergereActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        Rezultat.setText("0");
        zerodisp = false;
        decdisp = false;
        ina = 0;
        inb = 0;
        out = 0;
    }//GEN-LAST:event_ResetActionPerformed

    private void FractieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FractieActionPerformed
        inb = Double.parseDouble(String.valueOf(Rezultat.getText()));
        out = 1 / inb;
        
        if(out > -100000000 && out < 100000000){
            Rezultat.setText(String.valueOf(out));
        }
        else
        {
            Rezultat.setText("Error");
        }
        
        out = 0;
    }//GEN-LAST:event_FractieActionPerformed

    private void RadicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadicalActionPerformed
        inb = Double.parseDouble(String.valueOf(Rezultat.getText()));
        out = Math.sqrt(inb);
        
        
        Rezultat.setText(String.valueOf(out));
        
        out = 0;
    }//GEN-LAST:event_RadicalActionPerformed

    private void PutereaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PutereaActionPerformed
        inb = Double.parseDouble(String.valueOf(Rezultat.getText()));
        out = inb * inb;
        
        if(out > -100000000 && out < 100000000){
            Rezultat.setText(String.valueOf(out));
        }
        else
        {
            Rezultat.setText("Error");
        }
        
        out = 0;
    }//GEN-LAST:event_PutereaActionPerformed

    private void ImpartireaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImpartireaActionPerformed

            ina = Double.parseDouble(String.valueOf(Rezultat.getText()));
            inb = Double.parseDouble(String.valueOf(Rezultat.getText()));

        if( op == 1){
            ina = ina + inb;
        }

        if( op == 2){
            ina = ina - inb;
        }

        if( op == 3){
            ina = ina * inb;
        }

        if( op == 4){
            ina = ina / inb;
        }

        Rezultat.setText(String.valueOf(ina));

        op = 4;

        decdisp = false;
        zerodisp = false;
    }//GEN-LAST:event_ImpartireaActionPerformed

    private void AdunareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdunareActionPerformed
        if(op == 0){
            ina = Double.parseDouble(String.valueOf(Rezultat.getText()));
        }
        else{
            inb = Double.parseDouble(String.valueOf(Rezultat.getText()));
        }

        if(op == 1){
            ina = ina + inb;
        }

        if(op == 2){
            ina = ina - inb;
        }

        if(op == 3){
            ina = ina * inb;
        }

        if(op == 4){
            ina = ina / inb;
        }

        Rezultat.setText(String.valueOf(ina));
        

        op = 1;

        decdisp = false;
        zerodisp = false;
    }//GEN-LAST:event_AdunareActionPerformed

    private void ScadereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScadereActionPerformed
        if(op == 0){
            ina = Double.parseDouble(String.valueOf(Rezultat.getText()));
        }
        else{
            inb = Double.parseDouble(String.valueOf(Rezultat.getText()));
        }

        if( op == 1){
            ina = ina + inb;
        }

        if( op == 2){
            ina = ina - inb;
        }

        if( op == 3){
            ina = ina * inb;
        }

        if( op == 4){
            ina = ina / inb;
        }

        Rezultat.setText(String.valueOf(ina));

        op = 2;

        decdisp = false;
        zerodisp = false;
    }//GEN-LAST:event_ScadereActionPerformed

    private void InmultireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InmultireActionPerformed
        if(op == 0){
            ina = Double.parseDouble(String.valueOf(Rezultat.getText()));
        }
        else{
            inb = Double.parseDouble(String.valueOf(Rezultat.getText()));
        }

        if( op == 1){
            ina = ina + inb;
        }

        if( op == 2){
            ina = ina - inb;
        }

        if( op == 3){
            ina = ina * inb;
        }

        if( op == 4){
            ina = ina / inb;
        }
        
        Rezultat.setText(String.valueOf(ina));
        
        op = 3;

        decdisp = false;
        zerodisp = false;
    }//GEN-LAST:event_InmultireActionPerformed

    private void EgalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EgalActionPerformed
        inb = Double.parseDouble(String.valueOf(Rezultat.getText()));
        
        if(op == 0)
        {
            out = inb;
        }
        if(op == 1)
        {
            out = ina + inb;
        }
        if(op == 2)
        {
            out = ina - inb;
        }
        if(op == 3)
        {
            out = ina * inb;
        }
        if(op == 4)
        {
            out = ina / inb;
        }
        
        if(out > -100000000 && out < 100000000){
            Rezultat.setText(String.valueOf(out));
        }
        else
        {
            Rezultat.setText("Error");
        }
        
        ina = 0;
        inb = 0;
        out = 0;
        
        op = 0;
        decdisp = false;
        zerodisp = false;
    }//GEN-LAST:event_EgalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Adunare;
    private javax.swing.JButton Cinci;
    private javax.swing.JButton Doi;
    private javax.swing.JButton Egal;
    private javax.swing.JButton Fractie;
    private javax.swing.JButton Impartirea;
    private javax.swing.JButton Inmultire;
    private javax.swing.JButton Minus;
    private javax.swing.JButton Noua;
    private javax.swing.JButton Opt;
    private javax.swing.JButton Patru;
    private javax.swing.JButton Punct;
    private javax.swing.JButton Puterea;
    private javax.swing.JButton Radical;
    private javax.swing.JButton Reset;
    private javax.swing.JTextField Rezultat;
    private javax.swing.JButton Sapte;
    private javax.swing.JButton Sase;
    private javax.swing.JButton Scadere;
    private javax.swing.JButton Stergere;
    private javax.swing.JButton Trei;
    private javax.swing.JButton Unu;
    private javax.swing.JButton Zero;
    // End of variables declaration//GEN-END:variables
}
